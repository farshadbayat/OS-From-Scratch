######################Variable######################
ASM = nasm 
CC  = gcc
LD  = ld
DIR = src
O2B = objcopy
INCLUDE = include
LIBRARY	= library
ENTERY  = start
SRC = main.c libc.c idt.c gdt.c isrs.c irq.c timer.c task.c kb.c sheet.c memory.c
LIB =$(LIBRARY)/CTYPE.C $(LIBRARY)/MATH.C $(LIBRARY)/STRING.C $(LIBRARY)/STDIO.C $(LIBRARY)/CONIO.C $(LIBRARY)/SYSTEM.C $(LIBRARY)/MEM.C $(LIBRARY)/HDDIO.C	$(LIBRARY)/GRAPHICS.C $(LIBRARY)/MOUSE.C $(LIBRARY)/TIME.C $(LIBRARY)/CMOS.C $(LIBRARY)/FONT.C $(LIBRARY)/FAT.C
INC =$(INCLUDE)/CTYPE.H $(INCLUDE)/MATH.H $(INCLUDE)/STRING.H $(INCLUDE)/STDIO.H $(INCLUDE)/CONIO.H $(INCLUDE)/SYSTEM.H $(INCLUDE)/MEM.H $(INCLUDE)/HDDIO.H	$(INCLUDE)/GRAPHICS.H $(INCLUDE)/MOUSE.H $(INCLUDE)/TIME.H $(INCLUDE)/CMOS.H $(INCLUDE)/FONT.H $(INCLUDE)/FAT.H
OBJ = $(SRC:%.c=%.o) 
CFLAGS = -c -Wall -I ${INCLUDE}
LDFLAGS= -Ttext 0x10000 -e $(ENTERY)
######################compile Role######################

all:bootsect start object link image

clean:
	del *.o
	del *.bin 
	del *.img

bootsect: bootsect.asm
	${ASM} -fbin  -I ${INCLUDE}/ bootsect.asm -o bootsect.bin 
		
start: start.asm 
	${ASM} -faout -I ${INCLUDE}/ start.asm -o start.o  

link:
	$(LD)  ${LDFLAGS} -o kernel.o start.o ${OBJ}
	  
 image:	
	$(O2B) -R .note -R .comment -S -O binary kernel.o kernel.bin
	del *.img
	makeboot ParsOS.img bootsect.bin kernel.bin
	
 object: ${OBJ} 
 	
 %.o:%.c	
	$(CC) ${CFLAGS} $<	
	
 main.o: main.c
	$(CC) ${CFLAGS} main.c	-ffreestanding
	
 libc.o: libc.c	$(MAKEDEP) $(LIB) $(INC)
	$(CC) ${CFLAGS} libc.c	-ffreestanding -I ${LIBRARY}	


######################Dependency######################

